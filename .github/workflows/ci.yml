name: CI with dynamic parallel matrix

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  packages: write

jobs:
  execute:
    strategy:
      fail-fast: false
      matrix:
        section:
          - abm
          - df
          - diffeq
          - pde
          - ude
          - visual
    uses: ./.github/workflows/execute.yml
    with:
      dir: ${{ matrix.section }}

  render:
    needs: execute
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download notebooks
        uses: actions/download-artifact@v4
        with:
          path: out/
      - name: Copy back built notebooks
        run: for d in out/notebook-*; do cp --verbose -rf "$d"/docs/* docs/; done
      - name: Setup Python
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: '3.x'
      - name: Cache python venv
        uses: actions/cache@v4
        if: ${{ contains(runner.name, 'GitHub Actions') }}
        id: cache-venv
        with:
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('requirements-jb.txt') }}
          path: .venv
      - name: Install Python dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install -r requirements-jb.txt
          echo "${VIRTUAL_ENV}/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=${VIRTUAL_ENV}" >> $GITHUB_ENV
      - name: Build website
        run: jupyter-book build docs/
      - name: Upload page artifact
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html

  # CI conclusion for GitHub status check
  # Adaped from https://brunoscheufler.com/blog/2022-04-09-the-required-github-status-check-that-wasnt
  CI:
    needs: render
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [[ ${{ needs.render.result }} == "success" ]]; then
            echo "Tests passed"
            exit 0
          else
            echo "Tests failed"
            exit 1
          fi

  # Deployment job
  deploy:
    name: Deploy to GitHub pages
    needs: render
    if: ${{ github.ref == 'refs/heads/main' }}
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write    # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
      actions: read   # to download an artifact uploaded by `actions/upload-pages-artifact@v3`
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
